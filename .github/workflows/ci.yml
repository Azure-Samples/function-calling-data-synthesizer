on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
permissions:
  contents: read
  actions: read
  checks: write
env:
  pythonVersion: 3.12.9
jobs:
  Build_Stage_Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Install Linux packages
      run: |
        apt update && apt install -y \
        sudo \
        wget \
        curl \
        gcc \
        ca-certificates \
        build-essential \
        libssl-dev \
        zlib1g-dev \
        libbz2-dev \
        libreadline-dev \
        libffi-dev \
        llvm \
        xz-utils \
        git \
        libsqlite3-dev
        curl -sSL https://install.python-poetry.org | python3 - --version 1.8.3
        sudo apt-get clean -y
        sudo rm -rf /var/lib/apt/lists/*
    - name: Use Python ${{ env.pythonVersion }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.pythonVersion }}
        cache: 'poetry'
    - name: Install Python dependencies
      run: poetry install --no-root
    - name: Run Ruff
      run: poetry run ruff check --output-format=github .
    - name: Run pytest
      run: poetry run pytest --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-config=pyproject.toml
    - name: Publish Test Results
      uses: dorny/test-reporter@v2
      if: always()
      with:
        name: pytest
        path: |
          **/test-results.xml
        reporter: java-junit
    - name: Publish Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        badge: true
        output: both
        format: markdown
        filename: coverage.xml

    - name: Add code coverage summary markdown to github step summary
      run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

    - name: Archive test and code coverage results
      uses: actions/upload-artifact@v4
      with:
        name: test-and-coverage-results
        path: |
          **/test-results-*.xml
          coverage.xml
